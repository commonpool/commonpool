basePath: /api/v1
definitions:
  errors.ErrorResponse:
    properties:
      code:
        type: string
      message:
        type: string
      statusCode:
        type: integer
    type: object
  utils.Error:
    properties:
      errors:
        additionalProperties: true
        type: object
    type: object
  web.CreateResourcePayload:
    properties:
      description:
        type: string
      summary:
        type: string
      type:
        type: integer
      valueInHoursFrom:
        type: integer
      valueInHoursTo:
        type: integer
    type: object
  web.CreateResourceRequest:
    properties:
      resource:
        $ref: '#/definitions/web.CreateResourcePayload'
        type: object
    type: object
  web.CreateResourceResponse:
    properties:
      resource:
        $ref: '#/definitions/web.Resource'
        type: object
    type: object
  web.GetLatestThreadsResponse:
    properties:
      threads:
        items:
          $ref: '#/definitions/web.Thread'
        type: array
    type: object
  web.GetResourceResponse:
    properties:
      resource:
        $ref: '#/definitions/web.Resource'
        type: object
    type: object
  web.GetTopicMessagesResponse:
    properties:
      messages:
        items:
          $ref: '#/definitions/web.Message'
        type: array
    type: object
  web.InquireAboutResourceRequest:
    properties:
      message:
        type: string
    type: object
  web.Message:
    properties:
      content:
        type: string
      id:
        type: string
      sentAt:
        type: string
      sentBy:
        type: string
      sentByUsername:
        type: string
      topicId:
        type: string
    type: object
  web.Resource:
    properties:
      createdAt:
        type: string
      createdBy:
        type: string
      createdById:
        type: string
      description:
        type: string
      id:
        type: string
      summary:
        type: string
      type:
        type: integer
      valueInHoursFrom:
        type: integer
      valueInHoursTo:
        type: integer
    type: object
  web.SearchResourcesResponse:
    properties:
      resources:
        items:
          $ref: '#/definitions/web.Resource'
        type: array
      skip:
        type: integer
      take:
        type: integer
      totalCount:
        type: integer
    type: object
  web.SendMessageRequest:
    properties:
      message:
        type: string
    type: object
  web.Thread:
    properties:
      hasUnreadMessages:
        type: boolean
      id:
        type: string
      lastChars:
        type: string
      lastMessageAt:
        type: string
      lastMessageUserId:
        type: string
      lastMessageUsername:
        type: string
      recipientId:
        type: string
    type: object
  web.UpdateResourcePayload:
    properties:
      description:
        type: string
      summary:
        type: string
      type:
        type: integer
      valueInHoursFrom:
        type: integer
      valueInHoursTo:
        type: integer
    type: object
  web.UpdateResourceRequest:
    properties:
      resource:
        $ref: '#/definitions/web.UpdateResourcePayload'
        type: object
    type: object
  web.UpdateResourceResponse:
    properties:
      resource:
        $ref: '#/definitions/web.Resource'
        type: object
    type: object
  web.UserAuthResponse:
    properties:
      id:
        type: string
      isAuthenticated:
        type: boolean
      username:
        type: string
    type: object
  web.UserInfoResponse:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
host: 127.0.0.1:8585
info:
  contact: {}
  description: resources api
  license: {}
  termsOfService: http://swagger.io/terms
  title: commonpool api
  version: "1.0"
paths:
  /chat/:id:
    post:
      consumes:
      - application/json
      description: This endpoint sends a message to the given thread
      operationId: sendMessage
      parameters:
      - description: Message to send
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/web.SendMessageRequest'
      - description: Topic id
        in: path
        name: id
        required: true
        type: string
      responses:
        "202": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Sends a message to a topic
      tags:
      - chat
  /chat/messages:
    get:
      consumes:
      - application/json
      description: This endpoint returns the messages for the given topic.
      operationId: getMessages
      parameters:
      - default: 10
        description: Number of messages to take
        in: query
        name: take
        type: integer
      - default: 0
        description: Number of messages to skip
        in: query
        name: skip
        type: integer
      - description: Topic id
        in: query
        name: topic
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.GetTopicMessagesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Gets topic messages
      tags:
      - chat
  /chat/threads:
    get:
      consumes:
      - application/json
      description: This endpoint returns the latest messaging threads for the currently logged in user.
      operationId: getLatestThreads
      parameters:
      - default: 10
        description: Number of threads to take
        in: query
        name: take
        type: integer
      - default: 0
        description: Number of threads to skip
        in: query
        name: skip
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.GetLatestThreadsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Returns the latest user message threads
      tags:
      - chat
  /meta/who-am-i:
    get:
      consumes:
      - application/json
      description: Returns information about the currently authenticated user
      operationId: whoAmI
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.UserAuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Returns information about myself
      tags:
      - auth
  /resources:
    get:
      consumes:
      - application/json
      description: Search for resources
      operationId: searchResources
      parameters:
      - description: Search text
        in: query
        name: query
        type: string
      - description: Resource type
        enum:
        - "0"
        - "1"
        in: query
        name: type
        type: string
      - description: Created by
        in: query
        name: created_by
        type: string
      - default: 10
        description: Number of resources to take
        in: query
        name: take
        type: integer
      - default: 0
        description: Number of resources to skip
        in: query
        name: skip
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.SearchResourcesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.ErrorResponse'
      summary: Searches resources
      tags:
      - resources
    post:
      consumes:
      - application/json
      description: Creates a resource
      operationId: createResource
      parameters:
      - description: Resource to create
        in: body
        name: resource
        required: true
        schema:
          $ref: '#/definitions/web.CreateResourceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.CreateResourceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Creates a resource
      tags:
      - resources
    put:
      consumes:
      - application/json
      description: Updates a resource
      operationId: updateResource
      parameters:
      - description: Resource id
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Resource to create
        in: body
        name: resource
        required: true
        schema:
          $ref: '#/definitions/web.UpdateResourceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.UpdateResourceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Updates a resource
      tags:
      - resources
  /resources/:id:
    get:
      consumes:
      - application/json
      description: Gets a resource by id
      operationId: getResource
      parameters:
      - description: Resource id
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.GetResourceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Gets a single resource
      tags:
      - resources
  /resources/:id/inquire:
    post:
      consumes:
      - application/json
      description: This endpoint sends a message to the resource owner
      operationId: inquireAboutResource
      parameters:
      - description: Message to send
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/web.InquireAboutResourceRequest'
      - description: Resource id
        in: path
        name: id
        required: true
        type: string
      responses:
        "202": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Sends a message to the user about a resource
      tags:
      - resources
  /users/:id:
    get:
      consumes:
      - application/json
      description: Returns information about the given user
      operationId: getUserInfo
      parameters:
      - description: User id
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.UserInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Returns information about a user
      tags:
      - users
swagger: "2.0"
