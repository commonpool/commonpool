// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"github.com/commonpool/backend/pkg/keys"
	"github.com/commonpool/backend/pkg/trading"
	"sync"
)

// Ensure, that OfferApprovers does implement trading.Approvers.
// If this is not the case, regenerate this file with moq.
var _ trading.Approvers = &OfferApprovers{}

// OfferApprovers is a mock implementation of trading.Approvers.
//
//     func TestSomethingThatUsesApprovers(t *testing.T) {
//
//         // make and configure a mocked trading.Approvers
//         mockedApprovers := &OfferApprovers{
//             AllUserKeysFunc: func() *keys.UserKeys {
// 	               panic("mock out the AllUserKeys method")
//             },
//             GetInboundApproversFunc: func(offerItemKey keys.OfferItemKey) *keys.UserKeys {
// 	               panic("mock out the GetInboundApprovers method")
//             },
//             GetInboundOfferItemsFunc: func(userKey keys.UserKey) *keys.OfferItemKeys {
// 	               panic("mock out the GetInboundOfferItems method")
//             },
//             GetOutboundApproversFunc: func(offerItemKey keys.OfferItemKey) *keys.UserKeys {
// 	               panic("mock out the GetOutboundApprovers method")
//             },
//             GetOutboundOfferItemsFunc: func(userKey keys.UserKey) *keys.OfferItemKeys {
// 	               panic("mock out the GetOutboundOfferItems method")
//             },
//             HasAnyOfferItemsToApproveFunc: func(userKey keys.UserKey) bool {
// 	               panic("mock out the HasAnyOfferItemsToApprove method")
//             },
//         }
//
//         // use mockedApprovers in code that requires trading.Approvers
//         // and then make assertions.
//
//     }
type OfferApprovers struct {
	// AllUserKeysFunc mocks the AllUserKeys method.
	AllUserKeysFunc func() *keys.UserKeys

	// GetInboundApproversFunc mocks the GetInboundApprovers method.
	GetInboundApproversFunc func(offerItemKey keys.OfferItemKey) *keys.UserKeys

	// GetInboundOfferItemsFunc mocks the GetInboundOfferItems method.
	GetInboundOfferItemsFunc func(userKey keys.UserKey) *keys.OfferItemKeys

	// GetOutboundApproversFunc mocks the GetOutboundApprovers method.
	GetOutboundApproversFunc func(offerItemKey keys.OfferItemKey) *keys.UserKeys

	// GetOutboundOfferItemsFunc mocks the GetOutboundOfferItems method.
	GetOutboundOfferItemsFunc func(userKey keys.UserKey) *keys.OfferItemKeys

	// HasAnyOfferItemsToApproveFunc mocks the HasAnyOfferItemsToApprove method.
	HasAnyOfferItemsToApproveFunc func(userKey keys.UserKey) bool

	// calls tracks calls to the methods.
	calls struct {
		// AllUserKeys holds details about calls to the AllUserKeys method.
		AllUserKeys []struct {
		}
		// GetInboundApprovers holds details about calls to the GetInboundApprovers method.
		GetInboundApprovers []struct {
			// OfferItemKey is the offerItemKey argument value.
			OfferItemKey keys.OfferItemKey
		}
		// GetInboundOfferItems holds details about calls to the GetInboundOfferItems method.
		GetInboundOfferItems []struct {
			// MemberKey is the userKey argument value.
			UserKey keys.UserKey
		}
		// GetOutboundApprovers holds details about calls to the GetOutboundApprovers method.
		GetOutboundApprovers []struct {
			// OfferItemKey is the offerItemKey argument value.
			OfferItemKey keys.OfferItemKey
		}
		// GetOutboundOfferItems holds details about calls to the GetOutboundOfferItems method.
		GetOutboundOfferItems []struct {
			// MemberKey is the userKey argument value.
			UserKey keys.UserKey
		}
		// HasAnyOfferItemsToApprove holds details about calls to the HasAnyOfferItemsToApprove method.
		HasAnyOfferItemsToApprove []struct {
			// MemberKey is the userKey argument value.
			UserKey keys.UserKey
		}
	}
	lockAllUserKeys               sync.RWMutex
	lockGetInboundApprovers       sync.RWMutex
	lockGetInboundOfferItems      sync.RWMutex
	lockGetOutboundApprovers      sync.RWMutex
	lockGetOutboundOfferItems     sync.RWMutex
	lockHasAnyOfferItemsToApprove sync.RWMutex
}

// AllUserKeys calls AllUserKeysFunc.
func (mock *OfferApprovers) AllUserKeys() *keys.UserKeys {
	if mock.AllUserKeysFunc == nil {
		panic("OfferApprovers.AllUserKeysFunc: method is nil but Approvers.AllUserKeys was just called")
	}
	callInfo := struct {
	}{}
	mock.lockAllUserKeys.Lock()
	mock.calls.AllUserKeys = append(mock.calls.AllUserKeys, callInfo)
	mock.lockAllUserKeys.Unlock()
	return mock.AllUserKeysFunc()
}

// AllUserKeysCalls gets all the calls that were made to AllUserKeys.
// Check the length with:
//     len(mockedApprovers.AllUserKeysCalls())
func (mock *OfferApprovers) AllUserKeysCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockAllUserKeys.RLock()
	calls = mock.calls.AllUserKeys
	mock.lockAllUserKeys.RUnlock()
	return calls
}

// GetInboundApprovers calls GetInboundApproversFunc.
func (mock *OfferApprovers) GetInboundApprovers(offerItemKey keys.OfferItemKey) *keys.UserKeys {
	if mock.GetInboundApproversFunc == nil {
		panic("OfferApprovers.GetInboundApproversFunc: method is nil but Approvers.GetInboundApprovers was just called")
	}
	callInfo := struct {
		OfferItemKey keys.OfferItemKey
	}{
		OfferItemKey: offerItemKey,
	}
	mock.lockGetInboundApprovers.Lock()
	mock.calls.GetInboundApprovers = append(mock.calls.GetInboundApprovers, callInfo)
	mock.lockGetInboundApprovers.Unlock()
	return mock.GetInboundApproversFunc(offerItemKey)
}

// GetInboundApproversCalls gets all the calls that were made to GetInboundApprovers.
// Check the length with:
//     len(mockedApprovers.GetInboundApproversCalls())
func (mock *OfferApprovers) GetInboundApproversCalls() []struct {
	OfferItemKey keys.OfferItemKey
} {
	var calls []struct {
		OfferItemKey keys.OfferItemKey
	}
	mock.lockGetInboundApprovers.RLock()
	calls = mock.calls.GetInboundApprovers
	mock.lockGetInboundApprovers.RUnlock()
	return calls
}

// GetInboundOfferItems calls GetInboundOfferItemsFunc.
func (mock *OfferApprovers) GetInboundOfferItems(userKey keys.UserKey) *keys.OfferItemKeys {
	if mock.GetInboundOfferItemsFunc == nil {
		panic("OfferApprovers.GetInboundOfferItemsFunc: method is nil but Approvers.GetInboundOfferItems was just called")
	}
	callInfo := struct {
		UserKey keys.UserKey
	}{
		UserKey: userKey,
	}
	mock.lockGetInboundOfferItems.Lock()
	mock.calls.GetInboundOfferItems = append(mock.calls.GetInboundOfferItems, callInfo)
	mock.lockGetInboundOfferItems.Unlock()
	return mock.GetInboundOfferItemsFunc(userKey)
}

// GetInboundOfferItemsCalls gets all the calls that were made to GetInboundOfferItems.
// Check the length with:
//     len(mockedApprovers.GetInboundOfferItemsCalls())
func (mock *OfferApprovers) GetInboundOfferItemsCalls() []struct {
	UserKey keys.UserKey
} {
	var calls []struct {
		UserKey keys.UserKey
	}
	mock.lockGetInboundOfferItems.RLock()
	calls = mock.calls.GetInboundOfferItems
	mock.lockGetInboundOfferItems.RUnlock()
	return calls
}

// GetOutboundApprovers calls GetOutboundApproversFunc.
func (mock *OfferApprovers) GetOutboundApprovers(offerItemKey keys.OfferItemKey) *keys.UserKeys {
	if mock.GetOutboundApproversFunc == nil {
		panic("OfferApprovers.GetOutboundApproversFunc: method is nil but Approvers.GetOutboundApprovers was just called")
	}
	callInfo := struct {
		OfferItemKey keys.OfferItemKey
	}{
		OfferItemKey: offerItemKey,
	}
	mock.lockGetOutboundApprovers.Lock()
	mock.calls.GetOutboundApprovers = append(mock.calls.GetOutboundApprovers, callInfo)
	mock.lockGetOutboundApprovers.Unlock()
	return mock.GetOutboundApproversFunc(offerItemKey)
}

// GetOutboundApproversCalls gets all the calls that were made to GetOutboundApprovers.
// Check the length with:
//     len(mockedApprovers.GetOutboundApproversCalls())
func (mock *OfferApprovers) GetOutboundApproversCalls() []struct {
	OfferItemKey keys.OfferItemKey
} {
	var calls []struct {
		OfferItemKey keys.OfferItemKey
	}
	mock.lockGetOutboundApprovers.RLock()
	calls = mock.calls.GetOutboundApprovers
	mock.lockGetOutboundApprovers.RUnlock()
	return calls
}

// GetOutboundOfferItems calls GetOutboundOfferItemsFunc.
func (mock *OfferApprovers) GetOutboundOfferItems(userKey keys.UserKey) *keys.OfferItemKeys {
	if mock.GetOutboundOfferItemsFunc == nil {
		panic("OfferApprovers.GetOutboundOfferItemsFunc: method is nil but Approvers.GetOutboundOfferItems was just called")
	}
	callInfo := struct {
		UserKey keys.UserKey
	}{
		UserKey: userKey,
	}
	mock.lockGetOutboundOfferItems.Lock()
	mock.calls.GetOutboundOfferItems = append(mock.calls.GetOutboundOfferItems, callInfo)
	mock.lockGetOutboundOfferItems.Unlock()
	return mock.GetOutboundOfferItemsFunc(userKey)
}

// GetOutboundOfferItemsCalls gets all the calls that were made to GetOutboundOfferItems.
// Check the length with:
//     len(mockedApprovers.GetOutboundOfferItemsCalls())
func (mock *OfferApprovers) GetOutboundOfferItemsCalls() []struct {
	UserKey keys.UserKey
} {
	var calls []struct {
		UserKey keys.UserKey
	}
	mock.lockGetOutboundOfferItems.RLock()
	calls = mock.calls.GetOutboundOfferItems
	mock.lockGetOutboundOfferItems.RUnlock()
	return calls
}

// HasAnyOfferItemsToApprove calls HasAnyOfferItemsToApproveFunc.
func (mock *OfferApprovers) HasAnyOfferItemsToApprove(userKey keys.UserKey) bool {
	if mock.HasAnyOfferItemsToApproveFunc == nil {
		panic("OfferApprovers.HasAnyOfferItemsToApproveFunc: method is nil but Approvers.HasAnyOfferItemsToApprove was just called")
	}
	callInfo := struct {
		UserKey keys.UserKey
	}{
		UserKey: userKey,
	}
	mock.lockHasAnyOfferItemsToApprove.Lock()
	mock.calls.HasAnyOfferItemsToApprove = append(mock.calls.HasAnyOfferItemsToApprove, callInfo)
	mock.lockHasAnyOfferItemsToApprove.Unlock()
	return mock.HasAnyOfferItemsToApproveFunc(userKey)
}

// HasAnyOfferItemsToApproveCalls gets all the calls that were made to HasAnyOfferItemsToApprove.
// Check the length with:
//     len(mockedApprovers.HasAnyOfferItemsToApproveCalls())
func (mock *OfferApprovers) HasAnyOfferItemsToApproveCalls() []struct {
	UserKey keys.UserKey
} {
	var calls []struct {
		UserKey keys.UserKey
	}
	mock.lockHasAnyOfferItemsToApprove.RLock()
	calls = mock.calls.HasAnyOfferItemsToApprove
	mock.lockHasAnyOfferItemsToApprove.RUnlock()
	return calls
}
