<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7cd8279a-e3af-42a0-8513-69224f91376a" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/backend/pkg/auth/authenticator/authenticator.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/pkg/auth/authenticator/oidc/constants.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/pkg/auth/authenticator/oidc/context.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/pkg/auth/authenticator/oidc/middleware.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/pkg/auth/authenticator/oidc/utils.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/pkg/auth/module/module.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/pkg/auth/queries/get_username.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/pkg/auth/service/service.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/pkg/chat/module/module.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/pkg/group/module/module.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/pkg/trading/module.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/mock/authenticator.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/mock/authenticator.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/mock/chat_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/mock/chat_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/mock/chat_store.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/mock/chat_store.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/mock/user_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/mock/user_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/mock/user_store.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/mock/user_store.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/auth/auth.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/auth/cookie.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/auth/authenticator/oidc/cookie.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/auth/handler/handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/auth/handler/handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/auth/jwt_claims.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/auth/authenticator/oidc/jwt_claims.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/auth/middleware.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/auth/oidc.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/auth/authenticator/oidc/oidc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/auth/oidc_authenticator.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/auth/authenticator/oidc/oidc_authenticator.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/auth/redirect_response.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/auth/authenticator/oidc/redirect_response.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/auth/state.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/auth/authenticator/oidc/state.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/auth/token_response.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/auth/authenticator/oidc/token_response.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/auth/user_names.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/auth/models/user_names.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/auth/user_names_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/auth/models/user_names_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/auth/user_session.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/auth/models/user_session.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/auth/user_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/auth/models/user_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/chat/handler/get_messages_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/chat/handler/get_messages_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/chat/handler/handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/chat/handler/handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/chat/handler/post_interaction.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/chat/handler/post_interaction.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/chat/handler/subscription.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/chat/handler/subscription.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/chat/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/chat/service/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/chat/service/chat.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/chat/service/chat.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/chat/service/chat_convo_channel_get_create.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/chat/service/chat_convo_channel_get_create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/chat/service/delete_group_channel.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/chat/service/delete_group_channel.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/chat/service/get_messages.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/chat/service/get_messages.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/chat/service/get_user_subscriptions.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/chat/service/get_user_subscriptions.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/chat/service/send_conversation_message.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/chat/service/send_conversation_message.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/chat/service/send_group_message.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/chat/service/send_group_message.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/chat/service/send_message_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/chat/service/send_message_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/chat/store.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/chat/store/store.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/chat/store/chat.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/chat/store/chat.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/chat/store/get_messages.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/chat/store/get_messages.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/chat/store/get_subscription.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/chat/store/get_subscription.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/chat/store/get_user_subscriptions.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/chat/store/get_user_subscriptions.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/config/config_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/config/config_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/eventbus/catch_up_listener.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/eventbus/catch_up_listener.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/eventbus/rabbit_listener.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/eventbus/rabbit_listener.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/eventbus/rabbit_listener_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/eventbus/rabbit_listener_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/eventbus/redis_deduplicator_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/eventbus/redis_deduplicator_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/eventbus/replay_listener_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/eventbus/replay_listener_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/eventbus/sequence_listener_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/eventbus/sequence_listener_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/eventstore/postgres/eventstore_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/eventstore/postgres/eventstore_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/eventstore/postgres/postgres.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/eventstore/postgres/postgres.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/group/domain/group_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/group/domain/group_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/group/handler/get_group_invite_picker.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/group/handler/get_group_invite_picker.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/group/handler/get_group_memberships.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/group/handler/get_group_memberships.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/group/handler/get_membership.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/group/handler/get_membership.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/group/handler/get_user_memberships.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/group/handler/get_user_memberships.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/group/handler/handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/group/handler/handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/group/handler/helpers.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/group/handler/helpers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/group/handler/membership.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/group/handler/membership.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/group/handler/post_membership.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/group/handler/post_membership.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/group/service/accept_invitation.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/group/service/accept_invitation.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/group/service/create_group.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/group/service/create_group.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/group/service/decline_invitation.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/group/service/decline_invitation.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/group/service/group.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/group/service/group.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/handler/handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/handler/handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/realtime/pubsub.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/realtime/pubsub.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/resource/handler/handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/resource/handler/handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/resource/handler/post_resource.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/resource/handler/post_resource.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/resource/handler/put_resource.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/resource/handler/put_resource.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/server/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/server/server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/session/handler.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/shared/store/model.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/shared/store/model.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/test/events.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/test/events.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/test/handler_suite.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/test/handler_suite.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/trading/handler/get_offers.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/trading/handler/get_offers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/trading/handler/handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/trading/handler/handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/trading/service/accept_offer.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/trading/service/accept_offer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/trading/service/accept_offer_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/trading/service/accept_offer_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/trading/service/confirm_borrowed_resource_returned.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/trading/service/confirm_borrowed_resource_returned.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/trading/service/confirm_resource_borrowed.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/trading/service/confirm_resource_borrowed.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/trading/service/confirm_resource_transferred.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/trading/service/confirm_resource_transferred.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/trading/service/confirm_service_provided.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/trading/service/confirm_service_provided.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/trading/service/decline_offer.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/trading/service/decline_offer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/trading/service/submit_offer.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/trading/service/submit_offer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/trading/service/trading.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/trading/service/trading.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/trading/store/repository_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/trading/store/repository_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/trading/store/trading.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/trading/store/trading.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/user/handler/get_user.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/user/handler/get_users.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/user/handler/handler.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/user/handler/user_info.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/user/service.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/user/service/user_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/auth/service/user_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/user/store.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/auth/store/store.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/user/store/auth.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/auth/store/auth.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/user/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/auth/models/user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/user/user_reference.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/auth/models/user_reference.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/pkg/user/users.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/pkg/auth/models/users.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/test/integration/group_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/test/integration/group_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/test/integration/helpers_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/test/integration/helpers_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/test/integration/main_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/test/integration/main_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/test/integration/resource_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/test/integration/resource_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/test/integration/trading_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/test/integration/trading_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/test/integration/utils_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/backend/test/integration/utils_test.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/go1.15.6" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="KubernetesApiPersistence">
    <option name="context" value="minikube" />
    <option name="namespace" value="default" />
  </component>
  <component name="ProjectId" id="1lE2NveqT4lceYGPcXKwcaoot3v" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DatabaseDriversLRU" value="sqlite&#10;postgresql" />
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="TF_FMT" value="false" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable..is.expanded" value="false" />
    <property name="configurable.GoLibrariesConfigurable.is.expanded" value="true" />
    <property name="database.data.extractors.current.export.id" value="JSON-Groovy.json.groovy" />
    <property name="database.data.extractors.current.id" value="JSON-Groovy.json.groovy" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="go.vendoring.notification.had.been.shown" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/backend/pkg/group/queries" />
    <property name="settings.editor.selected.configurable" value="com.intellij.kubernetes.view.ui.settings.KubernetesViewConfigurable" />
    <property name="two.files.diff.last.used.file" value="$PROJECT_DIR$/backend/pkg/trading/domain/repository_test" />
  </component>
  <component name="RecentsManager">
    <key name="GoMoveDeclarationDialog.RECENT_KEY">
      <recent name="$PROJECT_DIR$/backend/pkg/auth/authenticator" />
      <recent name="$PROJECT_DIR$/backend/pkg/test" />
      <recent name="$PROJECT_DIR$/backend/pkg/group/readmodels" />
      <recent name="$PROJECT_DIR$/backend/pkg/group/domain" />
      <recent name="$PROJECT_DIR$/backend/pkg/eventsource" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/backend/pkg/group/queries" />
      <recent name="$PROJECT_DIR$/backend/pkg/eventbus" />
      <recent name="$PROJECT_DIR$/backend/pkg/trading/domain" />
      <recent name="$PROJECT_DIR$/platform/minikube" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/backend/pkg/group/module" />
      <recent name="$PROJECT_DIR$/backend/pkg/chat/module" />
      <recent name="$PROJECT_DIR$/backend/pkg/chat/store" />
      <recent name="$PROJECT_DIR$/backend/pkg/chat/service" />
      <recent name="$PROJECT_DIR$/backend/pkg/auth/authenticator/oidc" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build github.com/commonpool/backend">
    <configuration name="go build github.com/commonpool/backend" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="commonpool" />
      <working_directory value="$PROJECT_DIR$/backend" />
      <go_parameters value="-i" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="true" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" />
          <ENTRY IS_ENABLED="true" PARSER="env" PATH="backend/.env" />
        </ENTRIES>
      </EXTENSION>
      <kind value="DIRECTORY" />
      <filePath value="$PROJECT_DIR$" />
      <directory value="$PROJECT_DIR$/backend" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetEventsByType in github.com/commonpool/backend/pkg/eventstore/postgres (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="commonpool" />
      <working_directory value="$PROJECT_DIR$/backend/pkg/eventstore/postgres" />
      <parameters value=" -testify.m ^TestGetEventsByType$" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="true" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" />
          <ENTRY IS_ENABLED="true" PARSER="env" PATH="backend/.env" />
        </ENTRIES>
      </EXTENSION>
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/commonpool/backend/pkg/eventstore/postgres" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTestEventStoreSuite\E$/^\QTestGetEventsByType\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetEventsByType in github.com/commonpool/backend/pkg/eventstore/postgres" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="commonpool" />
      <working_directory value="$PROJECT_DIR$/backend/pkg/eventstore/postgres" />
      <parameters value=" -testify.m ^TestGetEventsByType$" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="true" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" />
          <ENTRY IS_ENABLED="true" PARSER="env" PATH="backend/.env" />
        </ENTRIES>
      </EXTENSION>
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/commonpool/backend/pkg/eventstore/postgres" />
      <directory value="$PROJECT_DIR$/backend" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\Qgithub.com\E$/^\Qcommonpool\E$/^\Qbackend\E$/^\Qpkg\E$/^\Qeventstore\E$/^\Qpostgres\E$/^\QTestEventStoreSuite\E$/^\QTestGetEventsByType\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestReplayListener in github.com/commonpool/backend/pkg/eventbus (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="commonpool" />
      <working_directory value="$PROJECT_DIR$/backend/pkg/eventbus" />
      <parameters value=" -testify.m ^TestReplayListener$" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="true" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" />
          <ENTRY IS_ENABLED="true" PARSER="env" PATH="backend/.env" />
        </ENTRIES>
      </EXTENSION>
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/commonpool/backend/pkg/eventbus" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTestReplayListener\E$/^\QTestReplayListener\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestReplayListener in github.com/commonpool/backend/pkg/eventbus" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="commonpool" />
      <working_directory value="$PROJECT_DIR$/backend/pkg/eventbus" />
      <parameters value=" -testify.m ^TestReplayListener$" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="true" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" />
          <ENTRY IS_ENABLED="true" PARSER="env" PATH="backend/.env" />
        </ENTRIES>
      </EXTENSION>
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/commonpool/backend/pkg/eventbus" />
      <directory value="$PROJECT_DIR$/backend" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\Qgithub.com\E$/^\Qcommonpool\E$/^\Qbackend\E$/^\Qpkg\E$/^\Qeventbus\E$/^\QTestReplayListener\E$/^\QTestReplayListener\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="commonpool" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="true" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" />
          <ENTRY IS_ENABLED="true" PARSER="env" PATH="backend/.env" />
        </ENTRIES>
      </EXTENSION>
      <framework value="gotest" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go test backend" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="commonpool" />
      <working_directory value="$PROJECT_DIR$/backend" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="true" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" />
          <ENTRY IS_ENABLED="true" PARSER="env" PATH="backend/.env" />
        </ENTRIES>
      </EXTENSION>
      <framework value="gotest" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$/backend" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build github.com/commonpool/backend" />
      <item itemvalue="Go Test.go test backend" />
      <item itemvalue="Go Test.TestGetEventsByType in github.com/commonpool/backend/pkg/eventstore/postgres" />
      <item itemvalue="Go Test.TestGetEventsByType in github.com/commonpool/backend/pkg/eventstore/postgres (1)" />
      <item itemvalue="Go Test.TestReplayListener in github.com/commonpool/backend/pkg/eventbus" />
      <item itemvalue="Go Test.TestReplayListener in github.com/commonpool/backend/pkg/eventbus (1)" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test backend" />
        <item itemvalue="Go Test.TestReplayListener in github.com/commonpool/backend/pkg/eventbus (1)" />
        <item itemvalue="Go Test.TestReplayListener in github.com/commonpool/backend/pkg/eventbus" />
        <item itemvalue="Go Test.TestGetEventsByType in github.com/commonpool/backend/pkg/eventstore/postgres (1)" />
        <item itemvalue="Go Test.TestGetEventsByType in github.com/commonpool/backend/pkg/eventstore/postgres" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7cd8279a-e3af-42a0-8513-69224f91376a" name="Default Changelist" comment="" />
      <created>1607147893376</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1607147893376</updated>
    </task>
    <task id="LOCAL-00001" summary="blurp">
      <created>1614719194487</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1614719194487</updated>
    </task>
    <task id="LOCAL-00002" summary="convert neo4j from bolt:// to neo4j://, update to latest driver, update echo version">
      <created>1614725912456</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1614725912456</updated>
    </task>
    <task id="LOCAL-00003" summary="tidy dependencies">
      <created>1614725952631</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1614725952631</updated>
    </task>
    <task id="LOCAL-00004" summary="fix tests and some neo4j upgrade bugs">
      <created>1614727521975</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1614727521975</updated>
    </task>
    <task id="LOCAL-00005" summary="wrk">
      <created>1614874650714</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1614874650714</updated>
    </task>
    <task id="LOCAL-00006" summary="wrk">
      <created>1615022249171</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1615022249171</updated>
    </task>
    <option name="localTasksCounter" value="7" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="blurp" />
    <MESSAGE value="convert neo4j from bolt:// to neo4j://, update to latest driver, update echo version" />
    <MESSAGE value="tidy dependencies" />
    <MESSAGE value="fix tests and some neo4j upgrade bugs" />
    <MESSAGE value="wrk" />
    <option name="LAST_COMMIT_MESSAGE" value="wrk" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/backend/pkg/eventbus/replay_listener_test.go</url>
          <line>63</line>
          <option name="timeStamp" value="174" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>